DROP VIEW IF EXISTS VW_SAFE_CATEGORY_QUESTIONS;
DROP VIEW IF EXISTS VW_CONSULTANT_CATEGORY_ITEM;
DROP VIEW IF EXISTS VW_MEANINGFULL_QUESTIONS;

DROP TABLE IF EXISTS TB_DIFFERENTIATION_QUESTION_OPTION_SESSION_SELECTION;
DROP TABLE IF EXISTS TB_DIFFERENTIATION_QUESTION_OPTION_ASSIGNMENT;
DROP TABLE IF EXISTS TB_DIFFERENTIATION_QUESTION_OPTION;
DROP TABLE IF EXISTS TB_DIFFERENTIATION_QUESTION;

DROP TABLE IF EXISTS TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT;-- Consultant

DROP TABLE IF EXISTS PUBLIC.TB_CONSULTANT_SKILL;
DROP TABLE IF EXISTS PUBLIC.TB_SKILL;
DROP TABLE IF EXISTS PUBLIC.TB_COMPANY_INDUSTRY;
DROP TABLE IF EXISTS PUBLIC.TB_CONSULTANT_EXPERIENCE;
DROP TABLE IF EXISTS PUBLIC.TB_COMPANY;
DROP TABLE IF EXISTS PUBLIC.TB_INDUSTRY;
DROP TABLE IF EXISTS PUBLIC.TB_CONSULTANT;

DROP TABLE IF EXISTS TB_SESSION_QUESTION_RESPONSES;
DROP TABLE IF EXISTS TB_SESSION_QUESTION;
DROP TABLE IF EXISTS TB_SESSION;

DROP TABLE IF EXISTS TB_CATEGORY_ITEM;
DROP TABLE IF EXISTS TB_CATEGORY_QUESTION;
DROP TABLE IF EXISTS TB_CATEGORY;

DROP TABLE IF EXISTS TB_CONFIGURATION;


CREATE TABLE PUBLIC.TB_SKILL (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	SKILL_NAME CHARACTER VARYING(256) UNIQUE NOT NULL
);

CREATE TABLE PUBLIC.TB_CONSULTANT (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	GIVEN_NAME CHARACTER VARYING(256) NOT NULL,
	SURNAME CHARACTER VARYING(256) NOT NULL,
	EMAIL CHARACTER VARYING(256) UNIQUE NOT NULL,
	CV TEXT NOT NULL,
	CV_SUMMARY TEXT NULL,
	INDUSTRY_NAME CHARACTER VARYING(256) NULL,
	GEO_LOCATION CHARACTER VARYING(256) NULL,
	LINKEDIN_PROFILE_URL CHARACTER VARYING(1024) NULL,
	LINKEDIN_PHOTO_200 CHARACTER VARYING(1024) NULL,
	LINKEDIN_PHOTO_400 CHARACTER VARYING(1024) NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL,
	CONSTRAINT email_format CHECK (
        EMAIL ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
    )
);

CREATE TABLE PUBLIC.TB_CONSULTANT_SKILL (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    CONSULTANT_ID INTEGER NOT NULL,
    SKILL_ID INTEGER NOT NULL,
    CONSTRAINT CONSULTANT_SKILL_CONSULTANT_ID
        FOREIGN KEY (CONSULTANT_ID) REFERENCES PUBLIC.TB_CONSULTANT (ID)
        MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT CONSULTANT_SKILL_SKILL_ID
        FOREIGN KEY (SKILL_ID) REFERENCES PUBLIC.TB_SKILL (ID)
        MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT UNIQUE_CONSULTANT_SKILL
        UNIQUE (CONSULTANT_ID, SKILL_ID)
);

CREATE TABLE PUBLIC.TB_INDUSTRY (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	INDUSTRY_NAME CHARACTER VARYING(256) NOT NULL
);

CREATE TABLE PUBLIC.TB_COMPANY (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	COMPANY_NAME CHARACTER VARYING(256) UNIQUE NOT NULL
);

CREATE TABLE PUBLIC.TB_COMPANY_INDUSTRY (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	INDUSTRY_ID INTEGER NOT NULL,
	COMPANY_ID INTEGER NOT NULL,
	CONSTRAINT COMPANY_INDUSTRY_COMPANY_ID
		FOREIGN KEY (COMPANY_ID) REFERENCES PUBLIC.TB_COMPANY (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
	CONSTRAINT COMPANY_INDUSTRY_INDUSTRY_ID
		FOREIGN KEY (INDUSTRY_ID) REFERENCES PUBLIC.TB_INDUSTRY (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE UNIQUE INDEX unique_email_ci ON PUBLIC.TB_CONSULTANT (LOWER(EMAIL));

CREATE TABLE PUBLIC.TB_CONSULTANT_EXPERIENCE (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	CONSULTANT_ID INTEGER NOT NULL,
	TITLE CHARACTER VARYING(256) NULL,
	LOCATION CHARACTER VARYING(256) NULL,
	START_DATE TIMESTAMP NOT NULL,
	END_DATE TIMESTAMP NULL,
	COMPANY_ID INTEGER NOT NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL,
	CONSTRAINT CONSULTANT_ID
		FOREIGN KEY (CONSULTANT_ID) REFERENCES PUBLIC.TB_CONSULTANT (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
	CONSTRAINT COMPANY_ID
		FOREIGN KEY (COMPANY_ID) REFERENCES PUBLIC.TB_COMPANY (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

-- CREATE TABLE PUBLIC.TB_SESSION_CONSULTANT_RATING (
-- 	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
-- 	CONSULTANT_ID INTEGER NOT NULL,
-- 	SESSION_ID CHARACTER VARYING(36) NOT NULL,
-- 	REASONING TEXT NOT NULL,
-- 	RATING CHARACTER VARYING(20) NOT NULL,
-- 	RATING_NUMBER SMALLINT NOT NULL CHECK (RATING_NUMBER BETWEEN 1 AND 5),
-- 	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
-- 	UPDATED_AT TIMESTAMP NULL,
-- 	CONSTRAINT CONSULTANT_ID
-- 		FOREIGN KEY (CONSULTANT_ID) REFERENCES PUBLIC.TB_CONSULTANT (ID)
-- 		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
-- );

-- Category related tables

CREATE TABLE PUBLIC.TB_CATEGORY (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NAME CHARACTER VARYING(256) NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NULL
);

-- unique constraint on name
CREATE UNIQUE INDEX unique_category_name ON PUBLIC.TB_CATEGORY (NAME);

CREATE TABLE PUBLIC.TB_CATEGORY_QUESTION (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    CATEGORY_ID INTEGER NOT NULL,
    QUESTION TEXT NOT NULL,
    ORDER_INDEX INTEGER NULL,
    ACTIVE BOOLEAN NOT NULL DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NULL,
    CONSTRAINT CATEGORY_ID
        FOREIGN KEY (CATEGORY_ID) REFERENCES PUBLIC.TB_CATEGORY (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

-- ALTER TABLE PUBLIC.TB_CATEGORY_QUESTION ADD ORDER_INDEX INTEGER NULL
-- ALTER TABLE PUBLIC.TB_CATEGORY_QUESTION ADD ACTIVE BOOLEAN NOT NULL DEFAULT TRUE

CREATE TABLE PUBLIC.TB_CATEGORY_ITEM (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    CATEGORY_ID INTEGER NOT NULL,
    ITEM CHARACTER VARYING(256) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NULL,
    CONSTRAINT CATEGORY_ID
		FOREIGN KEY (CATEGORY_ID) REFERENCES PUBLIC.TB_CATEGORY (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

-- unique constrait on category_id and item
CREATE UNIQUE INDEX unique_category_item ON PUBLIC.TB_CATEGORY_ITEM (CATEGORY_ID, ITEM);

CREATE TABLE PUBLIC.TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    CONSULTANT_ID INTEGER NOT NULL,
    CATEGORY_ITEM_ID INTEGER NOT NULL,
    REASON TEXT NULL,
    CONSTRAINT CONSULTANT_ID
		FOREIGN KEY (CONSULTANT_ID) REFERENCES PUBLIC.TB_CONSULTANT (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT CATEGORY_ITEM_ID
		FOREIGN KEY (CATEGORY_ITEM_ID) REFERENCES PUBLIC.TB_CATEGORY_ITEM (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

-- unique constrait on CONSULTANT_ID and CATEGORY_ITEM_ID
CREATE UNIQUE INDEX unique_consultant_category_item ON PUBLIC.TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT (CONSULTANT_ID, CATEGORY_ITEM_ID);


CREATE TABLE PUBLIC.TB_CONFIGURATION (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    KEY CHARACTER VARYING(256) NOT NULL,
    VALUE TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NULL
);

-- unique constraint on key
CREATE UNIQUE INDEX unique_configuration_key ON PUBLIC.TB_CONFIGURATION (KEY);

INSERT INTO PUBLIC.TB_CONFIGURATION (KEY, VALUE) VALUES ('candidate_threshold', '5');



CREATE TABLE PUBLIC.TB_SESSION (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    SESSION_ID CHARACTER VARYING(256) UNIQUE NOT NULL,
    USER_EMAIL CHARACTER VARYING(256) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NULL
);

CREATE TABLE PUBLIC.TB_SESSION_QUESTION (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    SESSION_ID INTEGER NOT NULL,
    CATEGORY_QUESTION_ID INTEGER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT SESSION_ID
        FOREIGN KEY (SESSION_ID) REFERENCES PUBLIC.TB_SESSION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT CATEGORY_QUESTION_ID
        FOREIGN KEY (CATEGORY_QUESTION_ID) REFERENCES PUBLIC.TB_CATEGORY_QUESTION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT UQ_SESSION_QUESTION UNIQUE (SESSION_ID, CATEGORY_QUESTION_ID)
);

CREATE TABLE PUBLIC.TB_SESSION_QUESTION_RESPONSES (
    ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    SESSION_QUESTION_ID INTEGER NOT NULL,
    CATEGORY_ITEM_ID INTEGER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT SESSION_QUESTION_ID
        FOREIGN KEY (SESSION_QUESTION_ID) REFERENCES PUBLIC.TB_SESSION_QUESTION (ID)
        MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT CATEGORY_ITEM_ID
        FOREIGN KEY (CATEGORY_ITEM_ID) REFERENCES PUBLIC.TB_CATEGORY_ITEM (ID)
        MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE VIEW VW_CONSULTANT_CATEGORY_ITEM AS
SELECT
	CA.NAME CATEGORY_NAME,
	ITEM CATEGORY_ITEM,
	C.ID CONSULTANT_ID,
	GIVEN_NAME,
	SURNAME,
	LINKEDIN_PROFILE_URL
FROM
	TB_CONSULTANT C
	INNER JOIN TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT A ON C.ID = A.CONSULTANT_ID
	INNER JOIN TB_CATEGORY_ITEM I ON I.ID = A.CATEGORY_ITEM_ID
	INNER JOIN TB_CATEGORY CA ON CA.ID = I.CATEGORY_ID
ORDER BY NAME,
	ITEM;


CREATE VIEW VW_MEANINGFULL_QUESTIONS AS
SELECT
	C.ID CATEGORY_ID,
	C.NAME CATEGORY,
	CQ.QUESTION,
	CQ.ID QUESTION_ID,
	CQ.ORDER_INDEX,
	CQ.ACTIVE,
	COUNT(DISTINCT CO.ID) CONSULTANTS_PER_QUESTION
FROM
	TB_CONSULTANT CO
	INNER JOIN TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT IA ON CO.ID = IA.CONSULTANT_ID
	INNER JOIN TB_CATEGORY_ITEM CI ON CI.ID = IA.CATEGORY_ITEM_ID
	INNER JOIN TB_CATEGORY C ON C.ID = CI.CATEGORY_ID
	INNER JOIN TB_CATEGORY_QUESTION CQ ON CQ.CATEGORY_ID = C.ID
GROUP BY C.ID, C.NAME, CQ.QUESTION, CQ.ID, CQ.ORDER_INDEX, CQ.ACTIVE
HAVING COUNT(DISTINCT CO.ID) > (SELECT VALUE::INT FROM TB_CONFIGURATION WHERE KEY = 'candidate_threshold')
ORDER BY CQ.ORDER_INDEX;


CREATE VIEW VW_SAFE_CATEGORY_QUESTIONS AS
SELECT
	CQ.ID,
	CA.NAME,
	CQ.ORDER_INDEX,
	COUNT(DISTINCT A.ID)
FROM
	TB_CATEGORY CA
	INNER JOIN TB_CATEGORY_QUESTION CQ ON CQ.CATEGORY_ID = CA.ID
	INNER JOIN TB_CATEGORY_ITEM I ON I.CATEGORY_ID = CA.ID
	LEFT JOIN TB_CONSULTANT_CATEGORY_ITEM_ASSIGNMENT A ON A.CATEGORY_ITEM_ID = I.ID
GROUP BY CQ.ID, CA.NAME, CQ.ORDER_INDEX
HAVING COUNT(DISTINCT A.ID) > 0
ORDER BY CQ.ORDER_INDEX;

-- Differentiation tables

CREATE TABLE PUBLIC.TB_DIFFERENTIATION_QUESTION (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	QUESTION TEXT NOT NULL,
	DIMENSION VARCHAR(256) NOT NULL,
	SESSION_ID CHARACTER VARYING(256) NOT NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL
);

CREATE UNIQUE INDEX unique_differentiation_question ON PUBLIC.TB_DIFFERENTIATION_QUESTION (SESSION_ID, QUESTION,DIMENSION);

CREATE TABLE PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	DIFFERENTIATION_QUESTION_ID INTEGER NOT NULL,
	OPTION_TEXT CHARACTER VARYING(1024) NOT NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL,
	CONSTRAINT DIFFERENTIATION_QUESTION_ID
		FOREIGN KEY (DIFFERENTIATION_QUESTION_ID) REFERENCES PUBLIC.TB_DIFFERENTIATION_QUESTION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE UNIQUE INDEX unique_differentiation_question_option 
ON PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION (DIFFERENTIATION_QUESTION_ID, OPTION_TEXT);

CREATE TABLE PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION_ASSIGNMENT (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	CONSULTANT_ID INTEGER NOT NULL,
	DIFFERENTIATION_QUESTION_OPTION_ID INTEGER NOT NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL,
	CONSTRAINT CONSULTANT_ID
		FOREIGN KEY (CONSULTANT_ID) REFERENCES PUBLIC.TB_CONSULTANT (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
	CONSTRAINT DIFFERENTIATION_QUESTION_OPTION_ID
		FOREIGN KEY (DIFFERENTIATION_QUESTION_OPTION_ID) REFERENCES PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE UNIQUE INDEX unique_differentiation_question_option_assignment 
ON PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION_ASSIGNMENT (CONSULTANT_ID, DIFFERENTIATION_QUESTION_OPTION_ID);


CREATE TABLE PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION_SESSION_SELECTION (
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	SESSION_ID INTEGER NOT NULL,
	DIFFERENTIATION_QUESTION_OPTION_ID INTEGER NOT NULL,
	CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NULL,
	CONSTRAINT SESSION_ID
		FOREIGN KEY (SESSION_ID) REFERENCES PUBLIC.TB_SESSION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE,
	CONSTRAINT DIFFERENTIATION_QUESTION_OPTION_ID
		FOREIGN KEY (DIFFERENTIATION_QUESTION_OPTION_ID) REFERENCES PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION (ID)
		MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE UNIQUE INDEX unique_differentiation_question_option_session_selection 
ON PUBLIC.TB_DIFFERENTIATION_QUESTION_OPTION_SESSION_SELECTION (SESSION_ID, DIFFERENTIATION_QUESTION_OPTION_ID);
